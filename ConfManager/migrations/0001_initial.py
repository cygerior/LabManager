# Generated by Django 3.2.9 on 2021-12-04 16:22

import ConfManager.models.reservation
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import macaddress.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('LabNet', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BackplaneGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('network', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='LabNet.network')),
            ],
        ),
        migrations.CreateModel(
            name='BackplaneSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_number', models.IntegerField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfManager.backplanegroup')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('device_number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfManager.device')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_confmanager.interface_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PowerController',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_confmanager.unittype_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='BackplaneNetworkInterface',
            fields=[
                ('interface_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ConfManager.interface')),
                ('device_number', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('ConfManager.interface',),
        ),
        migrations.CreateModel(
            name='BoardType',
            fields=[
                ('unittype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ConfManager.unittype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('ConfManager.unittype',),
        ),
        migrations.CreateModel(
            name='NetworkInterface',
            fields=[
                ('interface_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ConfManager.interface')),
                ('mac_address', macaddress.fields.MACAddressField(integer=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('ConfManager.interface',),
        ),
        migrations.CreateModel(
            name='UartInterface',
            fields=[
                ('interface_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ConfManager.interface')),
                ('uri', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('ConfManager.interface',),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('serial_number', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(null=True)),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfManager.unittype')),
            ],
        ),
        migrations.CreateModel(
            name='TestPlatform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('backplane', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfManager.backplaneslot')),
                ('board', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfManager.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField(blank=True)),
                ('labels', models.ManyToManyField(to='ConfManager.Label')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, default='', null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('release_date', models.DateTimeField(default=ConfManager.models.reservation.next_year)),
                ('platform', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ConfManager.testplatform')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conf_reservation', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PowerSupply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_number', models.IntegerField()),
                ('controller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfManager.powercontroller')),
            ],
            options={
                'verbose_name_plural': 'Power supplies',
                'ordering': ['port_number'],
            },
        ),
        migrations.AddField(
            model_name='device',
            name='board',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfManager.unit'),
        ),
        migrations.AddField(
            model_name='device',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfManager.devicetype'),
        ),
        migrations.CreateModel(
            name='BoardTypeDeviceAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('device_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfManager.devicetype')),
            ],
            options={
                'verbose_name_plural': 'Board type device aliases',
            },
        ),
        migrations.AddField(
            model_name='backplaneslot',
            name='power',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ConfManager.powersupply'),
        ),
        migrations.CreateModel(
            name='ModuleType',
            fields=[
                ('unittype_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='ConfManager.unittype')),
                ('board', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ConfManager.boardtype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('ConfManager.unittype',),
        ),
        migrations.AddConstraint(
            model_name='powersupply',
            constraint=models.UniqueConstraint(fields=('port_number', 'controller'), name='unique_port_controller'),
        ),
        migrations.AddField(
            model_name='networkinterface',
            name='network',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='LabNet.network'),
        ),
        migrations.AddConstraint(
            model_name='device',
            constraint=models.UniqueConstraint(fields=('board_id', 'type_id'), name='unique_target_device'),
        ),
        migrations.AddField(
            model_name='boardtypedevicealias',
            name='board_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_alias_set', to='ConfManager.boardtype'),
        ),
        migrations.AddConstraint(
            model_name='backplaneslot',
            constraint=models.UniqueConstraint(fields=('group_id', 'slot_number'), name='unique_backplane_group_slot'),
        ),
        migrations.AddField(
            model_name='backplanenetworkinterface',
            name='backplane',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ConfManager.backplaneslot'),
        ),
        migrations.AddConstraint(
            model_name='boardtypedevicealias',
            constraint=models.UniqueConstraint(fields=('board_type_id', 'name'), name='unique_board_type_device'),
        ),
    ]
